type Vote @entity {
  id: ID!
  timestamp: String!
  proposalIndex: BigInt!
  delegateKey: Bytes!
  memberAddress: Bytes!
  uintVote: Int!
  proposal: Proposal!
  member: Member!
}

type Proposal @entity {
  id: ID!
  timestamp: String!
  proposalIndex: BigInt!
  startingPeriod: BigInt!
  delegateKey: Bytes!
  member: Member!
  memberAddress: Bytes!
  applicant: Applicant!
  applicantAddress: Bytes!
  tokenTribute: BigInt!
  sharesRequested: BigInt!
  yesVotes: BigInt!
  noVotes: BigInt!
  yesShares: BigInt!
  noShares: BigInt!
  processed: Boolean!
  didPass: Boolean!
  aborted: Boolean!
  votes: [Vote!]!
  details: String!
  maxTotalSharesAtYesVote: BigInt!
}

type Applicant @entity {
  id: ID!
  timestamp: String!
  proposalIndex: BigInt!
  delegateKey: Bytes!
  member: Member!
  memberAddress: Bytes!
  applicantAddress: Bytes!
  tokenTribute: BigInt!
  sharesRequested: BigInt!
  didPass: Boolean!
  aborted: Boolean!
  votes: [Vote!]!
  proposal: Proposal!
}

type Member @entity {
  id: ID!
  delegateKey: Bytes!
  shares: BigInt!
  isActive: Boolean!
  highestIndexYesVote: BigInt!
  tokenTribute: BigInt!
  didRagequit: Boolean!
  votes: [Vote!]!
  submissions: [Proposal!]!
}

type Meta @entity {
  id: ID!
  currentPeriod: BigInt!
  totalShares: BigInt!
}

type PoolMember @entity {
  id: ID!
  shares: BigInt!
  keepers: [Bytes!]
}

type PoolMeta @entity {
  id: ID!
  currentPoolIndex: BigInt!
  totalPoolShares: BigInt!
}
